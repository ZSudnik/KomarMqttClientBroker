[versions]
## SDK Versions
min_sdk = "28"
compile_sdk = "35"
java_compatibility = "VERSION_21"
###############################
## buldSrc Version
gradle-android = "8.7.1"
kotlin = "2.0.20"
compose = "1.7.0" #"1.7.0-rc01" #"1.6.11"
google-ksp = "1.9.23-1.0.19"
android-desugaring = "2.0.4"
## Dependecies Version
coroutines = "1.9.0"

##
appcompat = "1.7.0"
atomicfu = "0.24.0"
camera = "1.3.4"
constraintlayoutCompose = "1.0.1"
customviewPoolingcontainer = "1.0.0"
flowredux = "1.0.2"
gson = "2.10.1"
lottie = "6.0.0"
androidx-test-junit = "1.2.1"
junit = "4.13.2"
media3Ui = "1.4.1"

google-accompanist_appcompat_theme = "0.27.1"
#google-accompanist_drawablepainter = "0.20.0"
#google-accompanist_webview = "0.30.1"
monitor = "1.6.1"
test-monitor = "1.7.2"
slf4j = "2.0.12"
zxing_core = "3.4.0"
google-exoplayer = "1.3.0"

android-gradle = "8.2.2"
android-material3 = "1.1.0-beta02"
android-material = "1.6.1"

androidx-navigation_compose = "2.8.3"
androidx-activity = "1.6.1"
androidx-customview_poolingcontainer = "1.0.0"
androidx-constraintlayout_compose = "1.0.1"

datastorePreferences = "1.1.1"
koin = "4.0.0"
colormath = "3.4.0"
ktor = "2.3.11"
kotlinx_io = "0.5.4"

android-gradle-plugin = "8.2.2"
ktlint-gradle = "12.1.0"



androidx-core = "1.13.1"
androidx-activity-compose = "1.9.3"
# TODO: Update to 2.8.+ when updating to Compose 1.7.+
androidx-lifecycle = "2.7.0"
lifecycleRuntimeComposeAndroid = "2.8.6"

commonsCodec = "1.17.1" #"1.15"
h2Mvstore = "1.4.200" #"1.4.199"
netty-mqtt = "4.1.114.Final"

[libraries]
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "camera" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
androidx-customview-poolingcontainer = { module = "androidx.customview:customview-poolingcontainer", version.ref = "customviewPoolingcontainer" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidx-lifecycle" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3Ui" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3Ui" }
androidx-test-monitor = { module = "androidx.test:monitor", version.ref = "test-monitor" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation_compose" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
colormath = { module = "com.github.ajalt.colormath:colormath", version.ref = "colormath" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }
flowredux-compose = { module = "com.freeletics.flowredux:compose", version.ref = "flowredux" }
flowredux-jvm = { module = "com.freeletics.flowredux:flowredux-jvm", version.ref = "flowredux" }
h2-mvstore = { module = "com.h2database:h2-mvstore", version.ref = "h2Mvstore" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
zxing-core = { module = "com.google.zxing:core", version.ref = "zxing-core" }
gradle-main = { group = "com.android.tools.build", name ="gradle", version.ref = "gradle-android"}
gradle-api = { group = "com.android.tools.build", name ="gradle-api", version.ref = "gradle-android"}
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
kotlinx-atomicfu = { group = "org.jetbrains.kotlinx", name ="atomicfu-gradle-plugin", version.ref = "atomicfu"}
kotlin-gradle = { group = "org.jetbrains.kotlin", name ="kotlin-gradle-plugin", version.ref = "kotlin"}
kotlin-stdlib = { group = "org.jetbrains.kotlin", name ="kotlin-stdlib", version.ref = "kotlin"}
kotlin-reflect = { group = "org.jetbrains.kotlin", name ="kotlin-reflect", version.ref = "kotlin"}
kotlinx-io = { group = "org.jetbrains.kotlinx", name ="kotlinx-io-core", version.ref = "kotlinx_io"}

#gradle-detekt = { group = "io.gitlab.arturbosch.detekt", name ="detekt-gradle-plugin", version.ref = "detekt"}
#gradle-ksp = { group = "com.google.devtools.ksp", name ="com.google.devtools.ksp.gradle.plugin",version.ref = "google-ksp"}
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core" }

androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose-android = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose-android", version.ref = "lifecycleRuntimeComposeAndroid" }
androidx-lifecycle-service = { group = "androidx.lifecycle", name = "lifecycle-service", version.ref = "lifecycleRuntimeComposeAndroid" }

#androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-junit" }

compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose" }
compose-animation = { module = "org.jetbrains.compose.animation:animation", version.ref = "compose" }
compose-animationGraphics = { module = "org.jetbrains.compose.animation:animation-graphics", version.ref = "compose" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "org.jetbrains.compose.material:material", version.ref = "compose" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose" }
compose-uiTest = { module = "org.jetbrains.compose.ui:ui-test", version.ref = "compose" }
compose-uiTooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose" }
compose-uiUtil = { module = "org.jetbrains.compose.ui:ui-util", version.ref = "compose" }
compose-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-materialIconsExtended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "compose" }

compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
#coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

junit = { module = "junit:junit", version.ref = "junit" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
#koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
#koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

#kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }

#ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
#ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
#ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
#ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
#ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
#ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
#ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }
#multiplatformSettings-common = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
#multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }

#roboelectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

#sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
#sqlDelight-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
#sqlDelight-coroutinesExt = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
#sqlDelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }

#touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
#touchlab-kermit-simple = { module = "co.touchlab:kermit-simple", version.ref = "kermit" }
#touchlab-skie-annotations = { module = "co.touchlab.skie:configuration-annotations", version.ref = "skie" }

#turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
#kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

netty-codec-mqtt = { module = "io.netty:netty-codec-mqtt", version.ref = "netty-mqtt" }
netty-codec-http = { module = "io.netty:netty-codec-http", version.ref = "netty-mqtt" }
netty-transport-native-epoll = { module = "io.netty:netty-transport-native-epoll", version.ref = "netty-mqtt" }

[plugins]
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

#ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-gradle" }
#kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
#kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

#sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
#android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
#android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
#kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
#skie = { id = "co.touchlab.skie", version.ref = "skie" }

[bundles]
#app-ui = [
#    "androidx-core",
#    "androidx-lifecycle-runtime",
#    "androidx-lifecycle-viewmodel",
#    "androidx-lifecycle-compose",
#    "compose-ui",
#    "compose-tooling",
#    "compose-foundation",
#    "compose-material",
#    "compose-activity"
#]
#ktor-common = ["ktor-client-core", "ktor-client-logging", "ktor-client-serialization", "ktor-client-contentNegotiation"]
#shared-commonTest = [
#    "kotlin-test",
#    "multiplatformSettings-test",
#    "koin-test",
#    "turbine",
#    "coroutines-test",
#    "ktor-client-mock"
#]
#shared-androidTest = [
#    "androidx-test-junit",
#    "coroutines-test",
#    "roboelectric",
#    "sqlDelight-jvm"
#]
