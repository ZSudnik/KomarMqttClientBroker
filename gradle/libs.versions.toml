#netty-mqtt = "4.1.114.Final"
[versions]
aa_compile_sdk = "35"
aa_java_compatibility = "VERSION_21"
aa_jdk = "21"
aa_min_sdk = "28"
aa_versionCode = "1"
aa_versionName = "1.0"
android-desugaring = "2.1.5"
androidx-activity-compose = "1.10.1"
androidx-core = "1.15.0"
androidx-lifecycle = "2.8.7"
androidx-navigation_compose = "2.8.9"
composeLib = "1.7.8"
annotation = "1.9.1"
annotationExperimental = "1.4.1"
agp = "8.7.2"
appcompat = "1.7.0"
atomicfu = "0.24.0"
camera = "1.4.2"
colormath = "3.6.1"
commonsCodec = "1.18.0"
compose = "1.7.3"
constraintlayoutCompose = "1.1.1"
coreKtx = "1.13.1"
coroutines = "1.10.1"
customviewPoolingcontainer = "1.0.0"
datastorePreferences = "1.1.7"
detekt = "1.23.8"
flowredux = "1.2.2"
fragment = "1.8.5"
gson = "2.13.1"
guava = "33.4.8-jre"
h2Mvstore = "1.4.200"#"1.4.199"
junit = "4.13.2"
koin = "4.0.4"
kotlin = "2.1.20"
kotlinx_io = "0.7.0"
ktor = "2.3.11"
lifecycleViewmodelCompose = "2.9.0"
lottie = "6.6.6"
material3 = "1.3.1"
media3 = "1.6.0"
navigationComposeAndroid = "2.9.0"
slf4j = "2.0.17"
stateMachine = "0.24.0"
test-monitor = "1.7.2"
zxing = "3.5.3"

[libraries]
android-desugar = {module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugaring"}
androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx-activity-compose" }
androidx-animation = { module = "androidx.compose.animation:animation", version.ref = "composeLib" }
androidx-animation-core = { module = "androidx.compose.animation:animation-core", version.ref = "composeLib" }
androidx-animation-graphics = { module = "androidx.compose.animation:animation-graphics", version.ref = "composeLib" }
androidx-annotation-experimental = { module = "androidx.annotation:annotation-experimental", version.ref = "annotationExperimental" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-appcompat-resources = { module = "androidx.appcompat:appcompat-resources", version.ref = "appcompat" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera" }
androidx-camera-core = { module = "androidx.camera:camera-core", version.ref = "camera" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "camera" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
androidx-constraintlayout-compose-android = { module = "androidx.constraintlayout:constraintlayout-compose-android", version.ref = "constraintlayoutCompose" }
androidx-constraintlayout-core = { module = "androidx.constraintlayout:constraintlayout-core", version.ref = "constraintlayoutCompose" }
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-customview-poolingcontainer = { module = "androidx.customview:customview-poolingcontainer", version.ref = "customviewPoolingcontainer" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastorePreferences" }
androidx-datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastorePreferences" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastorePreferences" }
androidx-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeLib" }
androidx-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "composeLib" }
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "fragment" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleViewmodelCompose" }
androidx-lifecycle-runtime-compose-android = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose-android", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }
androidx-material = { module = "androidx.compose.material:material", version.ref = "composeLib" }
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
androidx-media3-common = { module = "androidx.media3:media3-common", version.ref = "media3" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
androidx-navigation-common = { module = "androidx.navigation:navigation-common", version.ref = "navigationComposeAndroid" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation_compose" }
androidx-navigation-compose-android = { group = "androidx.navigation", name = "navigation-compose-android", version.ref = "navigationComposeAndroid" }
androidx-navigation-runtime = { module = "androidx.navigation:navigation-runtime", version.ref = "androidx-navigation_compose" }
androidx-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "composeLib" }
androidx-runtime-saveable = { module = "androidx.compose.runtime:runtime-saveable", version.ref = "composeLib" }
androidx-test-monitor = { module = "androidx.test:monitor", version.ref = "test-monitor" }
androidx-ui = { module = "androidx.compose.ui:ui", version.ref = "composeLib" }
androidx-ui-geometry = { module = "androidx.compose.ui:ui-geometry", version.ref = "composeLib" }
androidx-ui-graphics = { module = "androidx.compose.ui:ui-graphics", version.ref = "composeLib" }
androidx-ui-text = { module = "androidx.compose.ui:ui-text", version.ref = "composeLib" }
androidx-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeLib" }
androidx-ui-unit = { module = "androidx.compose.ui:ui-unit", version.ref = "composeLib" }
androidx-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "composeLib" }
annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
colormath-ajalt = { module = "com.github.ajalt.colormath:colormath", version.ref = "colormath" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
compose-animation = { module = "org.jetbrains.compose.animation:animation", version.ref = "compose" }
compose-animationGraphics = { module = "org.jetbrains.compose.animation:animation-graphics", version.ref = "compose" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "org.jetbrains.compose.material:material", version.ref = "compose" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose" }
compose-materialIconsExtended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "compose" }
compose-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose" }
compose-uiTest = { module = "org.jetbrains.compose.ui:ui-test", version.ref = "compose" }
compose-uiTooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "compose" }
compose-uiUtil = { module = "org.jetbrains.compose.ui:ui-util", version.ref = "compose" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
flowredux-compose = { module = "com.freeletics.flowredux:compose", version.ref = "flowredux" }
flowredux-jvm = { module = "com.freeletics.flowredux:flowredux-jvm", version.ref = "flowredux" }
flowredux-main = { module = "com.freeletics.flowredux:flowredux", version.ref = "flowredux" }
gradle-api = { group = "com.android.tools.build", name = "gradle-api", version.ref = "agp" }
gradle-main = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
h2-mvstore = { module = "com.h2database:h2-mvstore", version.ref = "h2Mvstore" }
junit = { module = "junit:junit", version.ref = "junit" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-core-viewmodel = { module = "io.insert-koin:koin-core-viewmodel", version.ref = "koin" }
kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
kotlin-gradle = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlinx-atomicfu = { group = "org.jetbrains.kotlinx", name = "atomicfu-gradle-plugin", version.ref = "atomicfu" }
kotlinx-io = { group = "org.jetbrains.kotlinx", name = "kotlinx-io-core", version.ref = "kotlinx_io" }
ktor-events = { module = "io.ktor:ktor-events", version.ref = "ktor" }
ktor-io = { module = "io.ktor:ktor-io", version.ref = "ktor" }
ktor-network = { module = "io.ktor:ktor-network", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-utils = { module = "io.ktor:ktor-utils", version.ref = "ktor" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }
lottie-main = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
state-machine = { module = "com.freeletics.mad:state-machine", version.ref = "stateMachine" }
zxing-core = { module = "com.google.zxing:core", version.ref = "zxing" }

#gradle-detekt = { group = "io.gitlab.arturbosch.detekt", name ="detekt-gradle-plugin", version.ref = "detekt"}
#gradle-ksp = { group = "com.google.devtools.ksp", name ="com.google.devtools.ksp.gradle.plugin",version.ref = "google-ksp"}
#netty-codec-http = { module = "io.netty:netty-codec-http", version.ref = "netty-mqtt" }
#netty-codec-mqtt = { module = "io.netty:netty-codec-mqtt", version.ref = "netty-mqtt" }
#netty-transport-native-epoll = { module = "io.netty:netty-transport-native-epoll", version.ref = "netty-mqtt" }
#roboelectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
#touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
#touchlab-kermit-simple = { module = "co.touchlab:kermit-simple", version.ref = "kermit" }
#touchlab-skie-annotations = { module = "co.touchlab.skie:configuration-annotations", version.ref = "skie" }
#turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
dependency-analysis = { id = "com.autonomousapps.dependency-analysis", version = "2.17.0" }
github-versions = { id = "com.github.ben-manes.versions", version = "0.52.0" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

detektformatting = { id = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
#gradle-download = {id="de.undercouch.download", version.ref = "gradleDownload"}
#ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-gradle" }
#skie = { id = "co.touchlab.skie", version.ref = "skie" }

[bundles]
#app-ui = [
#    "androidx-core",
#    "androidx-lifecycle-runtime",
#    "androidx-lifecycle-viewmodel",
#    "androidx-lifecycle-compose",
#    "compose-ui",
#    "compose-tooling",
#    "compose-foundation",
#    "compose-material",
#    "compose-activity"
#]
#ktor-common = ["ktor-client-core", "ktor-client-logging", "ktor-client-serialization", "ktor-client-contentNegotiation"]
#shared-commonTest = [
#    "kotlin-test",
#    "multiplatformSettings-test",
#    "koin-test",
#    "turbine",
#    "coroutines-test",
#    "ktor-client-mock"
#]
#shared-androidTest = [
#    "androidx-test-junit",
#    "coroutines-test",
#    "roboelectric",
#    "sqlDelight-jvm"
#]
